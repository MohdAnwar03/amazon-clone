{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n}; //SELECTOR\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Can't remove product (id: ${action.id}) as its not in basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user // This is going to be the user that we actuallty dispatched\n\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/91981/OneDrive/Desktop/amazon-clone/amazon-clone/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","index","findIndex","basketItem","id","newBasket","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB,C,CAKP;;AACA,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC1BA,MAD0B,aAC1BA,MAD0B,uBAC1BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADG;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAK,eAAL;AACI,aAAM,EACF,GAAGJ,KADD;AAEFR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFN,OAAN;;AAIJ,SAAK,oBAAL;AACI,YAAMQ,KAAK,GAAGL,KAAK,CAACR,MAAN,CAAac,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBP,MAAM,CAACO,EAD/B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACR,MAAV,CAAhB;;AACA,UAAGa,KAAK,IAAI,CAAZ,EAAc;AACVI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEK;AACDH,QAAAA,OAAO,CAACS,IAAR,CAAc,6BAA4BV,MAAM,CAACO,EAAG,yBAApD;AACH;;AACD,aAAM,EACF,GAAGR,KADD;AAEFR,QAAAA,MAAM,EAAEiB;AAFN,OAAN;;AAIJ,SAAK,UAAL;AACI,aAAM,EACF,GAAGT,KADD;AAEFP,QAAAA,IAAI,EAAEQ,MAAM,CAACR,IAFX,CAEgB;;AAFhB,OAAN;;AAIA;AACI,aAAOO,KAAP;AA1BZ;AA4BH,CA9BD;;AA+BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    basket: [],\r\n    user: null,\r\n};\r\n\r\n//SELECTOR\r\nexport const getBasketTotal = (basket) => \r\n    basket?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type){\r\n        case \"ADD_TO_BASKET\": \r\n            return{\r\n                ...state,\r\n                basket: [...state.basket, action.item]\r\n            };\r\n        case \"REMOVE_FROM_BASKET\": \r\n            const index = state.basket.findIndex(\r\n                (basketItem) => basketItem.id === action.id\r\n            );\r\n            let newBasket = [...state.basket];\r\n            if(index >= 0){\r\n                newBasket.splice(index, 1)\r\n            }else{\r\n                console.warn(`Can't remove product (id: ${action.id}) as its not in basket!`);\r\n            }\r\n            return{\r\n                ...state,\r\n                basket: newBasket,\r\n            }\r\n        case \"SET_USER\":\r\n            return{\r\n                ...state,\r\n                user: action.user,// This is going to be the user that we actuallty dispatched\r\n            };\r\n            default:\r\n                return state;\r\n    }\r\n}\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}